import 'isomorphic-fetch';
import React from 'react';
import TextField from '@material-ui/core/TextField';
import Autocomplete from '@material-ui/lab/Autocomplete';
import CircularProgress from '@material-ui/core/CircularProgress';


class Combobox extends React.Component {
  constructor() {
    super();
    this.state = {

    };
  }
  const [open, setOpen] = React.useState(false);
    const [options, setOptions] = React.useState([]);
    const loading = open && options.length === 0;

  function sleep(delay = 0) {
    return new Promise(resolve => {
      setTimeout(resolve, delay);
    });
  }

  React.useEffect(() => {
    let active = true;

    if (!loading) {
      return undefined;
    }

    (async () => {
      const response = fetch('https://country.register.gov.uk/records.json?page-size=5000');

      const countries =  response.json();

      if (active) {
        setOptions(Object.keys(countries).map(key => countries[key].item[0]));
      }
    })();

    return () => {
      active = false;
    };
  }, [loading]);

  React.useEffect(() => {
    if (!open) {
      setOptions([]);
    }
  }, [open]);



  render() {
    return (
   <Autocomplete
         style={{ width: 300 }}
         open={open}
         onOpen={() => {
           setOpen(true);
         }}
         onClose={() => {
           setOpen(false);
         }}
         getOptionLabel={option => option.name}
         options={options}
         loading={loading}
         renderInput={params => (
           <TextField
             {...params}
             label="Asynchronous"
             fullWidth
             variant="outlined"
             InputProps={{
               ...params.InputProps,
               endAdornment: (
                 <React.Fragment>
                   {loading ? <CircularProgress color="inherit" size={20} /> : null}
                   {params.InputProps.endAdornment}
                 </React.Fragment>
               ),
             }}
           />
         )}
       />
    );
  }
}
export default Combobox;